<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="messenger.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>